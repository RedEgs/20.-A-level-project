from libs.widgets import PygameWidget
from libs.widgets import SurfaceViewer
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.Qsci import *



class Ui_main_window(object):
    def setupUi(self, main_window):
        if not main_window.objectName():
            main_window.setObjectName(u"main_window")
        main_window.setWindowModality(Qt.NonModal)
        main_window.resize(1280, 976)
        main_window.setMinimumSize(QSize(1280, 720))
        icon = QIcon()
        icon.addFile(u"../redengine/assets/icon32.png", QSize(), QIcon.Normal, QIcon.Off)
        main_window.setWindowIcon(icon)
        main_window.setTabShape(QTabWidget.Rounded)
        main_window.setDockOptions(QMainWindow.AllowNestedDocks|QMainWindow.AllowTabbedDocks|QMainWindow.AnimatedDocks)
        self.actionSave = QAction(main_window)
        self.actionSave.setObjectName(u"actionSave")
        icon1 = QIcon()
        icon1.addFile(u"../redengine/assets/icons-shadowless/disk-black.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSave.setIcon(icon1)
        self.actionSave_as = QAction(main_window)
        self.actionSave_as.setObjectName(u"actionSave_as")
        icon2 = QIcon()
        icon2.addFile(u"../redengine/assets/icons-shadowless/disk.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSave_as.setIcon(icon2)
        self.actionNew_Project = QAction(main_window)
        self.actionNew_Project.setObjectName(u"actionNew_Project")
        icon3 = QIcon()
        icon3.addFile(u"../redengine/assets/icons-shadowless/folder-horizontal.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNew_Project.setIcon(icon3)
        self.actionOpen_Project = QAction(main_window)
        self.actionOpen_Project.setObjectName(u"actionOpen_Project")
        icon4 = QIcon()
        icon4.addFile(u"../redengine/assets/icons-shadowless/folder-horizontal-open.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOpen_Project.setIcon(icon4)
        self.actionRun_Project = QAction(main_window)
        self.actionRun_Project.setObjectName(u"actionRun_Project")
        icon5 = QIcon()
        icon5.addFile(u"../redengine/assets/icons/control.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRun_Project.setIcon(icon5)
        self.actionResources = QAction(main_window)
        self.actionResources.setObjectName(u"actionResources")
        self.actionResources.setCheckable(True)
        self.actionResources.setChecked(True)
        icon6 = QIcon()
        icon6.addFile(u"../redengine/assets/icons-shadowless/application-documents.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionResources.setIcon(icon6)
        self.actionAssets_Library = QAction(main_window)
        self.actionAssets_Library.setObjectName(u"actionAssets_Library")
        self.actionAssets_Library.setCheckable(True)
        self.actionAssets_Library.setChecked(True)
        icon7 = QIcon()
        icon7.addFile(u"../redengine/assets/icons-shadowless/bug.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAssets_Library.setIcon(icon7)
        self.actionProperties = QAction(main_window)
        self.actionProperties.setObjectName(u"actionProperties")
        self.actionProperties.setCheckable(True)
        self.actionProperties.setChecked(True)
        icon8 = QIcon()
        icon8.addFile(u"assets/10125_icons/imageres_5366.ico", QSize(), QIcon.Normal, QIcon.Off)
        self.actionProperties.setIcon(icon8)
        self.actionUndo = QAction(main_window)
        self.actionUndo.setObjectName(u"actionUndo")
        icon9 = QIcon()
        icon9.addFile(u"../redengine/assets/icons-shadowless/arrow-circle-225-left.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionUndo.setIcon(icon9)
        self.actionRedo = QAction(main_window)
        self.actionRedo.setObjectName(u"actionRedo")
        icon10 = QIcon()
        icon10.addFile(u"../redengine/assets/icons-shadowless/arrow-circle-225.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRedo.setIcon(icon10)
        self.actionVisit_Source = QAction(main_window)
        self.actionVisit_Source.setObjectName(u"actionVisit_Source")
        icon11 = QIcon()
        icon11.addFile(u"../redengine/assets/icons-shadowless/chain.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionVisit_Source.setIcon(icon11)
        self.actionNew_File = QAction(main_window)
        self.actionNew_File.setObjectName(u"actionNew_File")
        icon12 = QIcon()
        icon12.addFile(u"../redengine/assets/icons/document--plus.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNew_File.setIcon(icon12)
        self.actionNew_Folder = QAction(main_window)
        self.actionNew_Folder.setObjectName(u"actionNew_Folder")
        icon13 = QIcon()
        icon13.addFile(u"../redengine/assets/icons/folder--plus.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNew_Folder.setIcon(icon13)
        self.actionDelete_Resource = QAction(main_window)
        self.actionDelete_Resource.setObjectName(u"actionDelete_Resource")
        icon14 = QIcon()
        icon14.addFile(u"../redengine/assets/icons/cross.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionDelete_Resource.setIcon(icon14)
        self.actionConsole = QAction(main_window)
        self.actionConsole.setObjectName(u"actionConsole")
        self.actionConsole.setCheckable(True)
        self.actionConsole.setChecked(True)
        icon15 = QIcon()
        icon15.addFile(u"../redengine/assets/icons-shadowless/terminal.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionConsole.setIcon(icon15)
        self.actionCredits = QAction(main_window)
        self.actionCredits.setObjectName(u"actionCredits")
        icon16 = QIcon()
        icon16.addFile(u"../redengine/assets/icons-shadowless/thumb-up.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCredits.setIcon(icon16)
        self.actionDocumentation = QAction(main_window)
        self.actionDocumentation.setObjectName(u"actionDocumentation")
        icon17 = QIcon()
        icon17.addFile(u"../redengine/assets/icons-shadowless/book-open.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionDocumentation.setIcon(icon17)
        self.actionSave_Layout = QAction(main_window)
        self.actionSave_Layout.setObjectName(u"actionSave_Layout")
        icon18 = QIcon()
        icon18.addFile(u"../redengine/assets/icons-shadowless/disk--pencil.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSave_Layout.setIcon(icon18)
        self.actionLoad_Layout = QAction(main_window)
        self.actionLoad_Layout.setObjectName(u"actionLoad_Layout")
        icon19 = QIcon()
        icon19.addFile(u"../redengine/assets/icons-shadowless/disk--arrow.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionLoad_Layout.setIcon(icon19)
        self.actionRevert_Layout = QAction(main_window)
        self.actionRevert_Layout.setObjectName(u"actionRevert_Layout")
        icon20 = QIcon()
        icon20.addFile(u"../redengine/assets/icons-shadowless/disk--minus.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRevert_Layout.setIcon(icon20)
        self.actionUser_Settings = QAction(main_window)
        self.actionUser_Settings.setObjectName(u"actionUser_Settings")
        icon21 = QIcon()
        icon21.addFile(u"../redengine/assets/icons-shadowless/user.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionUser_Settings.setIcon(icon21)
        self.actionCut = QAction(main_window)
        self.actionCut.setObjectName(u"actionCut")
        icon22 = QIcon()
        icon22.addFile(u"../redengine/assets/icons-shadowless/scissors-blue.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCut.setIcon(icon22)
        self.actionCopt = QAction(main_window)
        self.actionCopt.setObjectName(u"actionCopt")
        icon23 = QIcon()
        icon23.addFile(u"../redengine/assets/icons-shadowless/blue-document-copy.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCopt.setIcon(icon23)
        self.actionPaste = QAction(main_window)
        self.actionPaste.setObjectName(u"actionPaste")
        icon24 = QIcon()
        icon24.addFile(u"../redengine/assets/icons-shadowless/clipboard.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPaste.setIcon(icon24)
        self.actionFind = QAction(main_window)
        self.actionFind.setObjectName(u"actionFind")
        icon25 = QIcon()
        icon25.addFile(u"../redengine/assets/icons-shadowless/magnifier.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionFind.setIcon(icon25)
        self.actionReplace = QAction(main_window)
        self.actionReplace.setObjectName(u"actionReplace")
        icon26 = QIcon()
        icon26.addFile(u"../redengine/assets/icons-shadowless/arrow-circle-double.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionReplace.setIcon(icon26)
        self.actionGenerate_Main_py = QAction(main_window)
        self.actionGenerate_Main_py.setObjectName(u"actionGenerate_Main_py")
        icon27 = QIcon()
        icon27.addFile(u"assets/py.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionGenerate_Main_py.setIcon(icon27)
        self.actionGenerate_Script = QAction(main_window)
        self.actionGenerate_Script.setObjectName(u"actionGenerate_Script")
        icon28 = QIcon()
        icon28.addFile(u"assets/py1.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionGenerate_Script.setIcon(icon28)
        self.actionRename = QAction(main_window)
        self.actionRename.setObjectName(u"actionRename")
        icon29 = QIcon()
        icon29.addFile(u"../redengine/assets/icons/application-rename.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRename.setIcon(icon29)
        self.actionSet_as_Main_py = QAction(main_window)
        self.actionSet_as_Main_py.setObjectName(u"actionSet_as_Main_py")
        icon30 = QIcon()
        icon30.addFile(u"../redengine/assets/icons/red-python.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSet_as_Main_py.setIcon(icon30)
        self.actionOpen_in_File_Explorer = QAction(main_window)
        self.actionOpen_in_File_Explorer.setObjectName(u"actionOpen_in_File_Explorer")
        icon31 = QIcon()
        icon31.addFile(u"../redengine/assets/icons/folder--arrow.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOpen_in_File_Explorer.setIcon(icon31)
        self.actionGenerate_Files = QAction(main_window)
        self.actionGenerate_Files.setObjectName(u"actionGenerate_Files")
        self.actionCreate_Context = QAction(main_window)
        self.actionCreate_Context.setObjectName(u"actionCreate_Context")
        self.actionCreate_Context.setIcon(icon12)
        self.actionCopy_Path = QAction(main_window)
        self.actionCopy_Path.setObjectName(u"actionCopy_Path")
        icon32 = QIcon()
        icon32.addFile(u"../redengine/assets/icons/document-copy.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCopy_Path.setIcon(icon32)
        self.actionExample_Script = QAction(main_window)
        self.actionExample_Script.setObjectName(u"actionExample_Script")
        icon33 = QIcon()
        icon33.addFile(u"../redengine/assets/icons/document-py.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExample_Script.setIcon(icon33)
        self.actionExample_Main = QAction(main_window)
        self.actionExample_Main.setObjectName(u"actionExample_Main")
        icon34 = QIcon()
        icon34.addFile(u"../redengine/assets/icons/document-mainpy.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExample_Main.setIcon(icon34)
        self.actionEmpty_Script = QAction(main_window)
        self.actionEmpty_Script.setObjectName(u"actionEmpty_Script")
        self.actionEmpty_Main = QAction(main_window)
        self.actionEmpty_Main.setObjectName(u"actionEmpty_Main")
        self.actionReload = QAction(main_window)
        self.actionReload.setObjectName(u"actionReload")
        icon35 = QIcon()
        icon35.addFile(u"../redengine/assets/icons/arrow-circle-135.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionReload.setIcon(icon35)
        self.actionClear_All_Recent_Projects = QAction(main_window)
        self.actionClear_All_Recent_Projects.setObjectName(u"actionClear_All_Recent_Projects")
        icon36 = QIcon()
        icon36.addFile(u"../redengine/assets/icons-shadowless/cross.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionClear_All_Recent_Projects.setIcon(icon36)
        self.actionCompile_Project = QAction(main_window)
        self.actionCompile_Project.setObjectName(u"actionCompile_Project")
        icon37 = QIcon()
        icon37.addFile(u"../redengine/assets/icons-shadowless/hammer-screwdriver.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionCompile_Project.setIcon(icon37)
        self.actionPause_Project = QAction(main_window)
        self.actionPause_Project.setObjectName(u"actionPause_Project")
        icon38 = QIcon()
        icon38.addFile(u"../redengine/assets/icons/control-pause.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPause_Project.setIcon(icon38)
        self.actionRun_In_Fullscreen = QAction(main_window)
        self.actionRun_In_Fullscreen.setObjectName(u"actionRun_In_Fullscreen")
        icon39 = QIcon()
        icon39.addFile(u"../redengine/assets/icons/controller-d-pad.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRun_In_Fullscreen.setIcon(icon39)
        self.actionPropertiesWindow = QAction(main_window)
        self.actionPropertiesWindow.setObjectName(u"actionPropertiesWindow")
        icon40 = QIcon()
        icon40.addFile(u"../redengine/assets/icons/application-detail.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPropertiesWindow.setIcon(icon40)
        self.actionPopout_Viewport = QAction(main_window)
        self.actionPopout_Viewport.setObjectName(u"actionPopout_Viewport")
        icon41 = QIcon()
        icon41.addFile(u"../redengine/assets/icons/application-export.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPopout_Viewport.setIcon(icon41)
        self.actionReturnLauncher = QAction(main_window)
        self.actionReturnLauncher.setObjectName(u"actionReturnLauncher")
        icon42 = QIcon()
        icon42.addFile(u"../redengine/assets/icons/rocket--arrow.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionReturnLauncher.setIcon(icon42)
        self.actionRevert_Themes = QAction(main_window)
        self.actionRevert_Themes.setObjectName(u"actionRevert_Themes")
        icon43 = QIcon()
        icon43.addFile(u"../redengine/assets/icons/paint-brush--minus.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRevert_Themes.setIcon(icon43)
        self.actionRename_Project = QAction(main_window)
        self.actionRename_Project.setObjectName(u"actionRename_Project")
        icon44 = QIcon()
        icon44.addFile(u"../redengine/assets/icons/ui-text-field-select.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionRename_Project.setIcon(icon44)
        self.actionChange_Project_Version = QAction(main_window)
        self.actionChange_Project_Version.setObjectName(u"actionChange_Project_Version")
        icon45 = QIcon()
        icon45.addFile(u"../redengine/assets/icons/tag-hash.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionChange_Project_Version.setIcon(icon45)
        self.actionChange_Project_Author = QAction(main_window)
        self.actionChange_Project_Author.setObjectName(u"actionChange_Project_Author")
        icon46 = QIcon()
        icon46.addFile(u"../redengine/assets/icons/user-silhouette-question.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionChange_Project_Author.setIcon(icon46)
        self.actionMark_As_Library = QAction(main_window)
        self.actionMark_As_Library.setObjectName(u"actionMark_As_Library")
        icon47 = QIcon()
        icon47.addFile(u"../redengine/assets/icons/block--plus.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionMark_As_Library.setIcon(icon47)
        self.actionUnmark_As_Library = QAction(main_window)
        self.actionUnmark_As_Library.setObjectName(u"actionUnmark_As_Library")
        icon48 = QIcon()
        icon48.addFile(u"../redengine/assets/icons/block--minus.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionUnmark_As_Library.setIcon(icon48)
        self.actionPygame_Information = QAction(main_window)
        self.actionPygame_Information.setObjectName(u"actionPygame_Information")
        icon49 = QIcon()
        icon49.addFile(u"../redengine/assets/icon_python_no_background.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPygame_Information.setIcon(icon49)
        self.central_widget = QWidget(main_window)
        self.central_widget.setObjectName(u"central_widget")
        self.central_widget.setEnabled(True)
        self.verticalLayout_7 = QVBoxLayout(self.central_widget)
        self.verticalLayout_7.setObjectName(u"verticalLayout_7")
        self.central_tab = QTabWidget(self.central_widget)
        self.central_tab.setObjectName(u"central_tab")
        self.preview_window = QWidget()
        self.preview_window.setObjectName(u"preview_window")
        self.verticalLayout_8 = QVBoxLayout(self.preview_window)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.frame_6 = QFrame(self.preview_window)
        self.frame_6.setObjectName(u"frame_6")
        self.frame_6.setFrameShape(QFrame.NoFrame)
        self.frame_6.setFrameShadow(QFrame.Raised)
        self.frame_6.setLineWidth(0)
        self.verticalLayout_16 = QVBoxLayout(self.frame_6)
        self.verticalLayout_16.setSpacing(6)
        self.verticalLayout_16.setObjectName(u"verticalLayout_16")
        self.verticalLayout_16.setContentsMargins(0, 0, 0, 0)
        self.frame = QFrame(self.frame_6)
        self.frame.setObjectName(u"frame")
        sizePolicy = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setAutoFillBackground(True)
        self.frame.setFrameShape(QFrame.Panel)
        self.frame.setFrameShadow(QFrame.Sunken)
        self.frame.setMidLineWidth(0)
        self.horizontalLayout = QHBoxLayout(self.frame)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.horizontalSpacer_2 = QSpacerItem(0, 0, QSizePolicy.MinimumExpanding, QSizePolicy.Minimum)

        self.horizontalLayout.addItem(self.horizontalSpacer_2)

        self.start_button = QPushButton(self.frame)
        self.start_button.setObjectName(u"start_button")
        sizePolicy.setHeightForWidth(self.start_button.sizePolicy().hasHeightForWidth())
        self.start_button.setSizePolicy(sizePolicy)
        self.start_button.setMinimumSize(QSize(28, 0))
        self.start_button.setIcon(icon5)
        self.start_button.setFlat(False)

        self.horizontalLayout.addWidget(self.start_button)

        self.pause_button = QPushButton(self.frame)
        self.pause_button.setObjectName(u"pause_button")
        sizePolicy.setHeightForWidth(self.pause_button.sizePolicy().hasHeightForWidth())
        self.pause_button.setSizePolicy(sizePolicy)
        self.pause_button.setIcon(icon38)
        self.pause_button.setFlat(False)

        self.horizontalLayout.addWidget(self.pause_button)

        self.stop_button = QPushButton(self.frame)
        self.stop_button.setObjectName(u"stop_button")
        sizePolicy.setHeightForWidth(self.stop_button.sizePolicy().hasHeightForWidth())
        self.stop_button.setSizePolicy(sizePolicy)
        icon50 = QIcon()
        icon50.addFile(u"../redengine/assets/icons/control-stop.png", QSize(), QIcon.Normal, QIcon.Off)
        self.stop_button.setIcon(icon50)
        self.stop_button.setFlat(False)

        self.horizontalLayout.addWidget(self.stop_button)

        self.reload_button = QPushButton(self.frame)
        self.reload_button.setObjectName(u"reload_button")
        sizePolicy.setHeightForWidth(self.reload_button.sizePolicy().hasHeightForWidth())
        self.reload_button.setSizePolicy(sizePolicy)
        icon51 = QIcon()
        icon51.addFile(u"../redengine/assets/icons/arrow-circle-double.png", QSize(), QIcon.Normal, QIcon.Off)
        self.reload_button.setIcon(icon51)
        self.reload_button.setFlat(False)

        self.horizontalLayout.addWidget(self.reload_button)

        self.horizontalSpacer_3 = QSpacerItem(0, 0, QSizePolicy.MinimumExpanding, QSizePolicy.Minimum)

        self.horizontalLayout.addItem(self.horizontalSpacer_3)


        self.verticalLayout_16.addWidget(self.frame)

        self.pygame_widget = PygameWidget(self.frame_6)
        self.pygame_widget.setObjectName(u"pygame_widget")
        self.pygame_widget.setAutoFillBackground(False)

        self.verticalLayout_16.addWidget(self.pygame_widget)


        self.verticalLayout_8.addWidget(self.frame_6)

        self.central_tab.addTab(self.preview_window, "")
        self.scripting_window = QWidget()
        self.scripting_window.setObjectName(u"scripting_window")
        self.verticalLayout_4 = QVBoxLayout(self.scripting_window)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.scripting_tab = QTabWidget(self.scripting_window)
        self.scripting_tab.setObjectName(u"scripting_tab")
        self.scripting_tab.setTabsClosable(True)
        self.scripting_tab.setMovable(True)

        self.verticalLayout_4.addWidget(self.scripting_tab)

        self.central_tab.addTab(self.scripting_window, "")

        self.verticalLayout_7.addWidget(self.central_tab)

        main_window.setCentralWidget(self.central_widget)
        self.resources_dock = QDockWidget(main_window)
        self.resources_dock.setObjectName(u"resources_dock")
        sizePolicy1 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Maximum)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.resources_dock.sizePolicy().hasHeightForWidth())
        self.resources_dock.setSizePolicy(sizePolicy1)
        self.resources_dock.setMinimumSize(QSize(320, 244))
        self.resources_dock.setMaximumSize(QSize(320, 524287))
        self.resources_dock.setBaseSize(QSize(250, 100))
        font = QFont()
        font.setUnderline(False)
        self.resources_dock.setFont(font)
        self.resources_dock.setFocusPolicy(Qt.StrongFocus)
        self.resources_dock.setAutoFillBackground(True)
        self.resources_dock.setFloating(False)
        self.resources_dock.setAllowedAreas(Qt.LeftDockWidgetArea|Qt.RightDockWidgetArea)
        self.resources_dock_contents = QWidget()
        self.resources_dock_contents.setObjectName(u"resources_dock_contents")
        sizePolicy2 = QSizePolicy(QSizePolicy.MinimumExpanding, QSizePolicy.Expanding)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.resources_dock_contents.sizePolicy().hasHeightForWidth())
        self.resources_dock_contents.setSizePolicy(sizePolicy2)
        self.resources_dock_contents.setAutoFillBackground(False)
        self.horizontalLayout_7 = QHBoxLayout(self.resources_dock_contents)
        self.horizontalLayout_7.setObjectName(u"horizontalLayout_7")
        self.verticalLayout_3 = QVBoxLayout()
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.resource_search_bar = QLineEdit(self.resources_dock_contents)
        self.resource_search_bar.setObjectName(u"resource_search_bar")
        self.resource_search_bar.setClearButtonEnabled(True)

        self.verticalLayout_3.addWidget(self.resource_search_bar)

        self.resources_tree = QTreeWidget(self.resources_dock_contents)
        self.resources_tree.setObjectName(u"resources_tree")
        sizePolicy3 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.resources_tree.sizePolicy().hasHeightForWidth())
        self.resources_tree.setSizePolicy(sizePolicy3)
        self.resources_tree.setContextMenuPolicy(Qt.CustomContextMenu)
        self.resources_tree.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.resources_tree.setHorizontalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        self.resources_tree.setDragDropMode(QAbstractItemView.DragOnly)
        self.resources_tree.setAnimated(False)
        self.resources_tree.setAllColumnsShowFocus(False)
        self.resources_tree.setColumnCount(3)
        self.resources_tree.header().setVisible(True)

        self.verticalLayout_3.addWidget(self.resources_tree)


        self.horizontalLayout_7.addLayout(self.verticalLayout_3)

        self.resources_dock.setWidget(self.resources_dock_contents)
        main_window.addDockWidget(Qt.LeftDockWidgetArea, self.resources_dock)
        self.console_dock = QDockWidget(main_window)
        self.console_dock.setObjectName(u"console_dock")
        self.console_dock.setEnabled(True)
        sizePolicy4 = QSizePolicy(QSizePolicy.Maximum, QSizePolicy.Fixed)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(0)
        sizePolicy4.setHeightForWidth(self.console_dock.sizePolicy().hasHeightForWidth())
        self.console_dock.setSizePolicy(sizePolicy4)
        self.console_dock.setMinimumSize(QSize(382, 244))
        self.console_dock.setBaseSize(QSize(0, 0))
        self.console_dock.setFocusPolicy(Qt.StrongFocus)
        self.console_dock.setFloating(False)
        self.dockWidgetContents = QWidget()
        self.dockWidgetContents.setObjectName(u"dockWidgetContents")
        self.gridLayout_2 = QGridLayout(self.dockWidgetContents)
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.frame_2 = QFrame(self.dockWidgetContents)
        self.frame_2.setObjectName(u"frame_2")
        self.frame_2.setAutoFillBackground(False)
        self.frame_2.setStyleSheet(u"QFrame {\n"
"	background-color: rgb(40, 40, 40);\n"
"}")
        self.frame_2.setFrameShape(QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_2 = QHBoxLayout(self.frame_2)
        self.horizontalLayout_2.setSpacing(3)
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.horizontalLayout_2.setContentsMargins(6, 6, 6, 6)
        self.clear_log_button = QPushButton(self.frame_2)
        self.clear_log_button.setObjectName(u"clear_log_button")
        sizePolicy5 = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Maximum)
        sizePolicy5.setHorizontalStretch(0)
        sizePolicy5.setVerticalStretch(0)
        sizePolicy5.setHeightForWidth(self.clear_log_button.sizePolicy().hasHeightForWidth())
        self.clear_log_button.setSizePolicy(sizePolicy5)
        self.clear_log_button.setMinimumSize(QSize(120, 30))
        self.clear_log_button.setAutoFillBackground(False)
        self.clear_log_button.setAutoRepeat(False)
        self.clear_log_button.setAutoExclusive(False)

        self.horizontalLayout_2.addWidget(self.clear_log_button)

        self.horizontalSpacer = QSpacerItem(10, 20, QSizePolicy.Expanding, QSizePolicy.Minimum)

        self.horizontalLayout_2.addItem(self.horizontalSpacer)

        self.frame_5 = QFrame(self.frame_2)
        self.frame_5.setObjectName(u"frame_5")
        sizePolicy6 = QSizePolicy(QSizePolicy.Maximum, QSizePolicy.Maximum)
        sizePolicy6.setHorizontalStretch(0)
        sizePolicy6.setVerticalStretch(0)
        sizePolicy6.setHeightForWidth(self.frame_5.sizePolicy().hasHeightForWidth())
        self.frame_5.setSizePolicy(sizePolicy6)
        self.frame_5.setAutoFillBackground(False)
        self.frame_5.setFrameShape(QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_6 = QHBoxLayout(self.frame_5)
        self.horizontalLayout_6.setObjectName(u"horizontalLayout_6")
        self.label_5 = QLabel(self.frame_5)
        self.label_5.setObjectName(u"label_5")
        sizePolicy6.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy6)
        self.label_5.setPixmap(QPixmap(u"../redengine/assets/icons/information-balloon.png"))

        self.horizontalLayout_6.addWidget(self.label_5)

        self.log_count_label = QLabel(self.frame_5)
        self.log_count_label.setObjectName(u"log_count_label")
        sizePolicy6.setHeightForWidth(self.log_count_label.sizePolicy().hasHeightForWidth())
        self.log_count_label.setSizePolicy(sizePolicy6)

        self.horizontalLayout_6.addWidget(self.log_count_label)


        self.horizontalLayout_2.addWidget(self.frame_5)

        self.frame_4 = QFrame(self.frame_2)
        self.frame_4.setObjectName(u"frame_4")
        sizePolicy6.setHeightForWidth(self.frame_4.sizePolicy().hasHeightForWidth())
        self.frame_4.setSizePolicy(sizePolicy6)
        self.frame_4.setAutoFillBackground(False)
        self.frame_4.setFrameShape(QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_5 = QHBoxLayout(self.frame_4)
        self.horizontalLayout_5.setObjectName(u"horizontalLayout_5")
        self.label_3 = QLabel(self.frame_4)
        self.label_3.setObjectName(u"label_3")
        sizePolicy6.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy6)
        self.label_3.setPixmap(QPixmap(u"../redengine/assets/icons/exclamation.png"))

        self.horizontalLayout_5.addWidget(self.label_3)

        self.warning_count_label = QLabel(self.frame_4)
        self.warning_count_label.setObjectName(u"warning_count_label")
        sizePolicy6.setHeightForWidth(self.warning_count_label.sizePolicy().hasHeightForWidth())
        self.warning_count_label.setSizePolicy(sizePolicy6)

        self.horizontalLayout_5.addWidget(self.warning_count_label)


        self.horizontalLayout_2.addWidget(self.frame_4)

        self.frame_3 = QFrame(self.frame_2)
        self.frame_3.setObjectName(u"frame_3")
        sizePolicy6.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy6)
        self.frame_3.setAutoFillBackground(False)
        self.frame_3.setFrameShape(QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QFrame.Raised)
        self.horizontalLayout_4 = QHBoxLayout(self.frame_3)
        self.horizontalLayout_4.setObjectName(u"horizontalLayout_4")
        self.label_2 = QLabel(self.frame_3)
        self.label_2.setObjectName(u"label_2")
        sizePolicy6.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy6)
        self.label_2.setPixmap(QPixmap(u"../redengine/assets/icons/exclamation-red.png"))

        self.horizontalLayout_4.addWidget(self.label_2)

        self.error_count_label = QLabel(self.frame_3)
        self.error_count_label.setObjectName(u"error_count_label")
        sizePolicy6.setHeightForWidth(self.error_count_label.sizePolicy().hasHeightForWidth())
        self.error_count_label.setSizePolicy(sizePolicy6)

        self.horizontalLayout_4.addWidget(self.error_count_label)


        self.horizontalLayout_2.addWidget(self.frame_3)


        self.gridLayout_2.addWidget(self.frame_2, 0, 0, 1, 1)

        self.console = QTextEdit(self.dockWidgetContents)
        self.console.setObjectName(u"console")
        font1 = QFont()
        font1.setFamilies([u"Consolas"])
        font1.setPointSize(14)
        self.console.setFont(font1)
        self.console.setStyleSheet(u"QTextEdit {\n"
"	background-color: rgb(0, 0, 0);\n"
"	color: rgb(255, 255, 255);\n"
"	border: 1px solid rgb(27, 27, 27);\n"
"}\n"
"")
        self.console.setReadOnly(True)

        self.gridLayout_2.addWidget(self.console, 1, 0, 1, 1)

        self.console_command_line = QLineEdit(self.dockWidgetContents)
        self.console_command_line.setObjectName(u"console_command_line")
        font2 = QFont()
        font2.setFamilies([u"Consolas"])
        self.console_command_line.setFont(font2)
        self.console_command_line.setAutoFillBackground(False)
        self.console_command_line.setStyleSheet(u"background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")

        self.gridLayout_2.addWidget(self.console_command_line, 2, 0, 1, 1)

        self.console_dock.setWidget(self.dockWidgetContents)
        main_window.addDockWidget(Qt.BottomDockWidgetArea, self.console_dock)
        self.debug_menu_dock = QDockWidget(main_window)
        self.debug_menu_dock.setObjectName(u"debug_menu_dock")
        sizePolicy7 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Fixed)
        sizePolicy7.setHorizontalStretch(0)
        sizePolicy7.setVerticalStretch(0)
        sizePolicy7.setHeightForWidth(self.debug_menu_dock.sizePolicy().hasHeightForWidth())
        self.debug_menu_dock.setSizePolicy(sizePolicy7)
        self.debug_menu_dock.setMinimumSize(QSize(400, 300))
        self.debug_menu_dock.setMaximumSize(QSize(400, 524287))
        self.debug_menu_dock.setBaseSize(QSize(250, 300))
        self.debug_menu_dock.setFocusPolicy(Qt.StrongFocus)
        icon52 = QIcon()
        icon52.addFile(u"../redengine/assets/icons/bug.png", QSize(), QIcon.Normal, QIcon.Off)
        self.debug_menu_dock.setWindowIcon(icon52)
        self.debug_menu_dock.setFloating(False)
        self.debug_menu_dock.setAllowedAreas(Qt.AllDockWidgetAreas)
        self.debug_menu_dock_contents = QWidget()
        self.debug_menu_dock_contents.setObjectName(u"debug_menu_dock_contents")
        self.verticalLayout = QVBoxLayout(self.debug_menu_dock_contents)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.debug_menu_toolbox = QToolBox(self.debug_menu_dock_contents)
        self.debug_menu_toolbox.setObjectName(u"debug_menu_toolbox")
        sizePolicy8 = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Expanding)
        sizePolicy8.setHorizontalStretch(0)
        sizePolicy8.setVerticalStretch(0)
        sizePolicy8.setHeightForWidth(self.debug_menu_toolbox.sizePolicy().hasHeightForWidth())
        self.debug_menu_toolbox.setSizePolicy(sizePolicy8)
        self.debug_menu_toolbox.setAutoFillBackground(False)
        self.toolBoxPage1 = QWidget()
        self.toolBoxPage1.setObjectName(u"toolBoxPage1")
        self.toolBoxPage1.setGeometry(QRect(0, 0, 365, 528))
        self.verticalLayout_2 = QVBoxLayout(self.toolBoxPage1)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.resource_monitor_group = QGroupBox(self.toolBoxPage1)
        self.resource_monitor_group.setObjectName(u"resource_monitor_group")
        self.resource_monitor_group.setFlat(False)
        self.resource_monitor_group.setCheckable(True)
        self.verticalLayout_9 = QVBoxLayout(self.resource_monitor_group)
        self.verticalLayout_9.setObjectName(u"verticalLayout_9")
        self.cpu_usage_label = QLabel(self.resource_monitor_group)
        self.cpu_usage_label.setObjectName(u"cpu_usage_label")
        sizePolicy.setHeightForWidth(self.cpu_usage_label.sizePolicy().hasHeightForWidth())
        self.cpu_usage_label.setSizePolicy(sizePolicy)
        self.cpu_usage_label.setMinimumSize(QSize(0, 30))
        font3 = QFont()
        font3.setFamilies([u"Consolas"])
        font3.setBold(False)
        font3.setUnderline(False)
        font3.setKerning(False)
        self.cpu_usage_label.setFont(font3)
        self.cpu_usage_label.setAutoFillBackground(False)
        self.cpu_usage_label.setFrameShape(QFrame.NoFrame)
        self.cpu_usage_label.setFrameShadow(QFrame.Plain)
        self.cpu_usage_label.setScaledContents(True)
        self.cpu_usage_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.cpu_usage_label.setWordWrap(True)

        self.verticalLayout_9.addWidget(self.cpu_usage_label)

        self.cpu_usage_label_2 = QLabel(self.resource_monitor_group)
        self.cpu_usage_label_2.setObjectName(u"cpu_usage_label_2")
        sizePolicy.setHeightForWidth(self.cpu_usage_label_2.sizePolicy().hasHeightForWidth())
        self.cpu_usage_label_2.setSizePolicy(sizePolicy)
        self.cpu_usage_label_2.setMinimumSize(QSize(0, 30))
        self.cpu_usage_label_2.setFont(font3)
        self.cpu_usage_label_2.setAutoFillBackground(False)
        self.cpu_usage_label_2.setFrameShape(QFrame.NoFrame)
        self.cpu_usage_label_2.setFrameShadow(QFrame.Plain)
        self.cpu_usage_label_2.setScaledContents(True)
        self.cpu_usage_label_2.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.cpu_usage_label_2.setWordWrap(True)

        self.verticalLayout_9.addWidget(self.cpu_usage_label_2)

        self.ram_usage_label = QLabel(self.resource_monitor_group)
        self.ram_usage_label.setObjectName(u"ram_usage_label")
        sizePolicy.setHeightForWidth(self.ram_usage_label.sizePolicy().hasHeightForWidth())
        self.ram_usage_label.setSizePolicy(sizePolicy)
        self.ram_usage_label.setMinimumSize(QSize(0, 30))
        self.ram_usage_label.setFont(font3)
        self.ram_usage_label.setAutoFillBackground(False)
        self.ram_usage_label.setFrameShape(QFrame.NoFrame)
        self.ram_usage_label.setFrameShadow(QFrame.Plain)
        self.ram_usage_label.setScaledContents(True)
        self.ram_usage_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.ram_usage_label.setWordWrap(True)

        self.verticalLayout_9.addWidget(self.ram_usage_label)

        self.memory_usage_label = QLabel(self.resource_monitor_group)
        self.memory_usage_label.setObjectName(u"memory_usage_label")
        sizePolicy.setHeightForWidth(self.memory_usage_label.sizePolicy().hasHeightForWidth())
        self.memory_usage_label.setSizePolicy(sizePolicy)
        self.memory_usage_label.setMinimumSize(QSize(0, 30))
        self.memory_usage_label.setFont(font3)
        self.memory_usage_label.setAutoFillBackground(False)
        self.memory_usage_label.setFrameShape(QFrame.NoFrame)
        self.memory_usage_label.setFrameShadow(QFrame.Plain)
        self.memory_usage_label.setScaledContents(True)
        self.memory_usage_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.memory_usage_label.setWordWrap(True)

        self.verticalLayout_9.addWidget(self.memory_usage_label)

        self.memory_pusage_label = QLabel(self.resource_monitor_group)
        self.memory_pusage_label.setObjectName(u"memory_pusage_label")
        sizePolicy.setHeightForWidth(self.memory_pusage_label.sizePolicy().hasHeightForWidth())
        self.memory_pusage_label.setSizePolicy(sizePolicy)
        self.memory_pusage_label.setMinimumSize(QSize(0, 30))
        self.memory_pusage_label.setFont(font3)
        self.memory_pusage_label.setAutoFillBackground(False)
        self.memory_pusage_label.setFrameShape(QFrame.NoFrame)
        self.memory_pusage_label.setFrameShadow(QFrame.Plain)
        self.memory_pusage_label.setScaledContents(True)
        self.memory_pusage_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.memory_pusage_label.setWordWrap(True)

        self.verticalLayout_9.addWidget(self.memory_pusage_label)

        self.gpu_usage_label = QLabel(self.resource_monitor_group)
        self.gpu_usage_label.setObjectName(u"gpu_usage_label")
        self.gpu_usage_label.setEnabled(True)
        sizePolicy.setHeightForWidth(self.gpu_usage_label.sizePolicy().hasHeightForWidth())
        self.gpu_usage_label.setSizePolicy(sizePolicy)
        self.gpu_usage_label.setMinimumSize(QSize(0, 30))
        self.gpu_usage_label.setFont(font3)
        self.gpu_usage_label.setAutoFillBackground(False)
        self.gpu_usage_label.setFrameShape(QFrame.NoFrame)
        self.gpu_usage_label.setFrameShadow(QFrame.Plain)
        self.gpu_usage_label.setScaledContents(True)
        self.gpu_usage_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.gpu_usage_label.setWordWrap(True)

        self.verticalLayout_9.addWidget(self.gpu_usage_label)


        self.verticalLayout_2.addWidget(self.resource_monitor_group)

        self.groupBox_3 = QGroupBox(self.toolBoxPage1)
        self.groupBox_3.setObjectName(u"groupBox_3")
        self.groupBox_3.setCheckable(False)
        self.groupBox_3.setChecked(False)
        self.verticalLayout_11 = QVBoxLayout(self.groupBox_3)
        self.verticalLayout_11.setObjectName(u"verticalLayout_11")
        self.platform_debug_list = QListWidget(self.groupBox_3)
        self.platform_debug_list.setObjectName(u"platform_debug_list")
        sizePolicy.setHeightForWidth(self.platform_debug_list.sizePolicy().hasHeightForWidth())
        self.platform_debug_list.setSizePolicy(sizePolicy)
        font4 = QFont()
        font4.setFamilies([u"Consolas"])
        font4.setPointSize(10)
        font4.setStyleStrategy(QFont.PreferAntialias)
        self.platform_debug_list.setFont(font4)
        self.platform_debug_list.setFrameShape(QFrame.NoFrame)
        self.platform_debug_list.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOn)
        self.platform_debug_list.setProperty("showDropIndicator", False)
        self.platform_debug_list.setAlternatingRowColors(False)
        self.platform_debug_list.setSpacing(3)
        self.platform_debug_list.setUniformItemSizes(True)
        self.platform_debug_list.setSelectionRectVisible(False)

        self.verticalLayout_11.addWidget(self.platform_debug_list)

        self.pushButton = QPushButton(self.groupBox_3)
        self.pushButton.setObjectName(u"pushButton")
        icon53 = QIcon()
        icon53.addFile(u"../redengine/assets/icons/computer--arrow.png", QSize(), QIcon.Normal, QIcon.Off)
        self.pushButton.setIcon(icon53)

        self.verticalLayout_11.addWidget(self.pushButton)


        self.verticalLayout_2.addWidget(self.groupBox_3)

        icon54 = QIcon()
        icon54.addFile(u"../redengine/assets/icons/computer.png", QSize(), QIcon.Normal, QIcon.Off)
        self.debug_menu_toolbox.addItem(self.toolBoxPage1, icon54, u"Machine Information")
        self.toolBoxPage2 = QWidget()
        self.toolBoxPage2.setObjectName(u"toolBoxPage2")
        self.toolBoxPage2.setGeometry(QRect(0, 0, 365, 459))
        self.verticalLayout_6 = QVBoxLayout(self.toolBoxPage2)
        self.verticalLayout_6.setObjectName(u"verticalLayout_6")
        self.delta_time_label = QLabel(self.toolBoxPage2)
        self.delta_time_label.setObjectName(u"delta_time_label")
        sizePolicy.setHeightForWidth(self.delta_time_label.sizePolicy().hasHeightForWidth())
        self.delta_time_label.setSizePolicy(sizePolicy)
        self.delta_time_label.setMinimumSize(QSize(0, 30))
        self.delta_time_label.setFont(font3)
        self.delta_time_label.setAutoFillBackground(False)
        self.delta_time_label.setFrameShape(QFrame.StyledPanel)
        self.delta_time_label.setScaledContents(True)
        self.delta_time_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.delta_time_label.setWordWrap(True)

        self.verticalLayout_6.addWidget(self.delta_time_label)

        self.fps_group_box = QGroupBox(self.toolBoxPage2)
        self.fps_group_box.setObjectName(u"fps_group_box")
        sizePolicy9 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Maximum)
        sizePolicy9.setHorizontalStretch(0)
        sizePolicy9.setVerticalStretch(0)
        sizePolicy9.setHeightForWidth(self.fps_group_box.sizePolicy().hasHeightForWidth())
        self.fps_group_box.setSizePolicy(sizePolicy9)
        self.fps_group_box.setAutoFillBackground(True)
        self.fps_group_box.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignTop)
        self.fps_group_box.setFlat(False)
        self.fps_group_box.setCheckable(False)
        self.horizontalLayout_3 = QHBoxLayout(self.fps_group_box)
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.fps_low_label = QLabel(self.fps_group_box)
        self.fps_low_label.setObjectName(u"fps_low_label")
        sizePolicy.setHeightForWidth(self.fps_low_label.sizePolicy().hasHeightForWidth())
        self.fps_low_label.setSizePolicy(sizePolicy)
        self.fps_low_label.setMinimumSize(QSize(0, 30))
        self.fps_low_label.setFont(font3)
        self.fps_low_label.setAutoFillBackground(False)
        self.fps_low_label.setFrameShape(QFrame.StyledPanel)
        self.fps_low_label.setFrameShadow(QFrame.Sunken)
        self.fps_low_label.setScaledContents(True)
        self.fps_low_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.fps_low_label.setWordWrap(True)

        self.horizontalLayout_3.addWidget(self.fps_low_label)

        self.fps_average_label = QLabel(self.fps_group_box)
        self.fps_average_label.setObjectName(u"fps_average_label")
        sizePolicy.setHeightForWidth(self.fps_average_label.sizePolicy().hasHeightForWidth())
        self.fps_average_label.setSizePolicy(sizePolicy)
        self.fps_average_label.setMinimumSize(QSize(0, 30))
        self.fps_average_label.setFont(font3)
        self.fps_average_label.setAutoFillBackground(False)
        self.fps_average_label.setFrameShape(QFrame.StyledPanel)
        self.fps_average_label.setFrameShadow(QFrame.Plain)
        self.fps_average_label.setScaledContents(True)
        self.fps_average_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.fps_average_label.setWordWrap(True)

        self.horizontalLayout_3.addWidget(self.fps_average_label)

        self.fps_high_label = QLabel(self.fps_group_box)
        self.fps_high_label.setObjectName(u"fps_high_label")
        sizePolicy.setHeightForWidth(self.fps_high_label.sizePolicy().hasHeightForWidth())
        self.fps_high_label.setSizePolicy(sizePolicy)
        self.fps_high_label.setMinimumSize(QSize(0, 30))
        self.fps_high_label.setFont(font3)
        self.fps_high_label.setAutoFillBackground(False)
        self.fps_high_label.setFrameShape(QFrame.StyledPanel)
        self.fps_high_label.setFrameShadow(QFrame.Plain)
        self.fps_high_label.setScaledContents(True)
        self.fps_high_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.fps_high_label.setWordWrap(True)

        self.horizontalLayout_3.addWidget(self.fps_high_label)


        self.verticalLayout_6.addWidget(self.fps_group_box)

        self.blit_calls_label = QLabel(self.toolBoxPage2)
        self.blit_calls_label.setObjectName(u"blit_calls_label")
        sizePolicy.setHeightForWidth(self.blit_calls_label.sizePolicy().hasHeightForWidth())
        self.blit_calls_label.setSizePolicy(sizePolicy)
        self.blit_calls_label.setMinimumSize(QSize(0, 30))
        self.blit_calls_label.setFont(font3)
        self.blit_calls_label.setAutoFillBackground(False)
        self.blit_calls_label.setFrameShape(QFrame.StyledPanel)
        self.blit_calls_label.setFrameShadow(QFrame.Plain)
        self.blit_calls_label.setScaledContents(True)
        self.blit_calls_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.blit_calls_label.setWordWrap(True)

        self.verticalLayout_6.addWidget(self.blit_calls_label)

        self.draw_calls_label = QLabel(self.toolBoxPage2)
        self.draw_calls_label.setObjectName(u"draw_calls_label")
        sizePolicy.setHeightForWidth(self.draw_calls_label.sizePolicy().hasHeightForWidth())
        self.draw_calls_label.setSizePolicy(sizePolicy)
        self.draw_calls_label.setMinimumSize(QSize(0, 30))
        self.draw_calls_label.setFont(font3)
        self.draw_calls_label.setAutoFillBackground(False)
        self.draw_calls_label.setFrameShape(QFrame.StyledPanel)
        self.draw_calls_label.setFrameShadow(QFrame.Plain)
        self.draw_calls_label.setScaledContents(True)
        self.draw_calls_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.draw_calls_label.setWordWrap(True)

        self.verticalLayout_6.addWidget(self.draw_calls_label)

        self.active_surfaces_label = QLabel(self.toolBoxPage2)
        self.active_surfaces_label.setObjectName(u"active_surfaces_label")
        sizePolicy.setHeightForWidth(self.active_surfaces_label.sizePolicy().hasHeightForWidth())
        self.active_surfaces_label.setSizePolicy(sizePolicy)
        self.active_surfaces_label.setMinimumSize(QSize(0, 30))
        self.active_surfaces_label.setFont(font3)
        self.active_surfaces_label.setAutoFillBackground(False)
        self.active_surfaces_label.setFrameShape(QFrame.StyledPanel)
        self.active_surfaces_label.setFrameShadow(QFrame.Plain)
        self.active_surfaces_label.setScaledContents(True)
        self.active_surfaces_label.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.active_surfaces_label.setWordWrap(True)

        self.verticalLayout_6.addWidget(self.active_surfaces_label)

        self.groupBox_2 = QGroupBox(self.toolBoxPage2)
        self.groupBox_2.setObjectName(u"groupBox_2")
        self.groupBox_2.setFlat(False)
        self.groupBox_2.setCheckable(False)
        self.verticalLayout_10 = QVBoxLayout(self.groupBox_2)
        self.verticalLayout_10.setSpacing(6)
        self.verticalLayout_10.setObjectName(u"verticalLayout_10")
        self.verticalLayout_10.setContentsMargins(9, 6, 9, 9)
        self.pygame_debug_list = QListWidget(self.groupBox_2)
        self.pygame_debug_list.setObjectName(u"pygame_debug_list")
        sizePolicy.setHeightForWidth(self.pygame_debug_list.sizePolicy().hasHeightForWidth())
        self.pygame_debug_list.setSizePolicy(sizePolicy)
        font5 = QFont()
        font5.setFamilies([u"Consolas"])
        font5.setPointSize(10)
        self.pygame_debug_list.setFont(font5)
        self.pygame_debug_list.setAutoFillBackground(False)
        self.pygame_debug_list.setFrameShape(QFrame.NoFrame)
        self.pygame_debug_list.setAlternatingRowColors(False)
        self.pygame_debug_list.setSpacing(3)
        self.pygame_debug_list.setUniformItemSizes(True)
        self.pygame_debug_list.setSelectionRectVisible(True)

        self.verticalLayout_10.addWidget(self.pygame_debug_list)


        self.verticalLayout_6.addWidget(self.groupBox_2)

        icon55 = QIcon()
        icon55.addFile(u"../redengine/assets/icons/application-block.png", QSize(), QIcon.Normal, QIcon.Off)
        self.debug_menu_toolbox.addItem(self.toolBoxPage2, icon55, u"Pygame Debug Information")

        self.verticalLayout.addWidget(self.debug_menu_toolbox)

        self.debug_menu_dock.setWidget(self.debug_menu_dock_contents)
        main_window.addDockWidget(Qt.RightDockWidgetArea, self.debug_menu_dock)
        self.menu_bar = QMenuBar(main_window)
        self.menu_bar.setObjectName(u"menu_bar")
        self.menu_bar.setGeometry(QRect(0, 0, 1280, 22))
        self.project_button = QMenu(self.menu_bar)
        self.project_button.setObjectName(u"project_button")
        self.menuRecent_Projects = QMenu(self.project_button)
        self.menuRecent_Projects.setObjectName(u"menuRecent_Projects")
        self.menuRecent_Projects.setGeometry(QRect(0, -1, 135, 50))
        icon56 = QIcon()
        icon56.addFile(u"../redengine/assets/icons-shadowless/blue-folder-horizontal-open.png", QSize(), QIcon.Normal, QIcon.Off)
        self.menuRecent_Projects.setIcon(icon56)
        self.menuPreferences = QMenu(self.project_button)
        self.menuPreferences.setObjectName(u"menuPreferences")
        self.menuPreferences.setGeometry(QRect(496, 317, 202, 231))
        icon57 = QIcon()
        icon57.addFile(u"../redengine/assets/icons-shadowless/wrench.png", QSize(), QIcon.Normal, QIcon.Off)
        self.menuPreferences.setIcon(icon57)
        self.menuThemes = QMenu(self.menuPreferences)
        self.menuThemes.setObjectName(u"menuThemes")
        icon58 = QIcon()
        icon58.addFile(u"../redengine/assets/icons-shadowless/paint-brush.png", QSize(), QIcon.Normal, QIcon.Off)
        self.menuThemes.setIcon(icon58)
        self.menuLoad_Themes = QMenu(self.menuThemes)
        self.menuLoad_Themes.setObjectName(u"menuLoad_Themes")
        icon59 = QIcon()
        icon59.addFile(u"../redengine/assets/icons/paint-brush--arrow.png", QSize(), QIcon.Normal, QIcon.Off)
        self.menuLoad_Themes.setIcon(icon59)
        self.menuProject_Settings = QMenu(self.menuPreferences)
        self.menuProject_Settings.setObjectName(u"menuProject_Settings")
        icon60 = QIcon()
        icon60.addFile(u"../redengine/assets/icons/gear.png", QSize(), QIcon.Normal, QIcon.Off)
        self.menuProject_Settings.setIcon(icon60)
        self.windows_button = QMenu(self.menu_bar)
        self.windows_button.setObjectName(u"windows_button")
        self.help_button = QMenu(self.menu_bar)
        self.help_button.setObjectName(u"help_button")
        self.menuEdit = QMenu(self.menu_bar)
        self.menuEdit.setObjectName(u"menuEdit")
        self.menuBuild = QMenu(self.menu_bar)
        self.menuBuild.setObjectName(u"menuBuild")
        main_window.setMenuBar(self.menu_bar)
        self.toolBar = QToolBar(main_window)
        self.toolBar.setObjectName(u"toolBar")
        font6 = QFont()
        font6.setUnderline(True)
        self.toolBar.setFont(font6)
        self.toolBar.setMovable(False)
        self.toolBar.setIconSize(QSize(24, 24))
        self.toolBar.setToolButtonStyle(Qt.ToolButtonIconOnly)
        self.toolBar.setFloatable(False)
        main_window.addToolBar(Qt.TopToolBarArea, self.toolBar)
        self.Properties_dock = QDockWidget(main_window)
        self.Properties_dock.setObjectName(u"Properties_dock")
        self.Properties_dock.setMinimumSize(QSize(338, 670))
        self.Properties_dock.setFocusPolicy(Qt.StrongFocus)
        self.dockWidgetContents_3 = QWidget()
        self.dockWidgetContents_3.setObjectName(u"dockWidgetContents_3")
        self.verticalLayout_12 = QVBoxLayout(self.dockWidgetContents_3)
        self.verticalLayout_12.setObjectName(u"verticalLayout_12")
        self.properties_tabs = QTabWidget(self.dockWidgetContents_3)
        self.properties_tabs.setObjectName(u"properties_tabs")
        sizePolicy10 = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Minimum)
        sizePolicy10.setHorizontalStretch(0)
        sizePolicy10.setVerticalStretch(0)
        sizePolicy10.setHeightForWidth(self.properties_tabs.sizePolicy().hasHeightForWidth())
        self.properties_tabs.setSizePolicy(sizePolicy10)
        self.properties_tab_1 = QWidget()
        self.properties_tab_1.setObjectName(u"properties_tab_1")
        self.verticalLayout_14 = QVBoxLayout(self.properties_tab_1)
        self.verticalLayout_14.setObjectName(u"verticalLayout_14")
        self.mainScriptPropertiesGroup = QGroupBox(self.properties_tab_1)
        self.mainScriptPropertiesGroup.setObjectName(u"mainScriptPropertiesGroup")
        self.mainScriptPropertiesGroup.setAlignment(Qt.AlignCenter)
        self.mainScriptPropertiesGroup.setFlat(False)
        self.mainScriptPropertiesGroup.setCheckable(False)
        self.mainScriptPropertiesGroup.setChecked(False)
        self.verticalLayout_13 = QVBoxLayout(self.mainScriptPropertiesGroup)
        self.verticalLayout_13.setObjectName(u"verticalLayout_13")
        self.properties_search_bar = QLineEdit(self.mainScriptPropertiesGroup)
        self.properties_search_bar.setObjectName(u"properties_search_bar")
        self.properties_search_bar.setFrame(True)

        self.verticalLayout_13.addWidget(self.properties_search_bar)

        self.PropertiesTable = QTableWidget(self.mainScriptPropertiesGroup)
        if (self.PropertiesTable.columnCount() < 1):
            self.PropertiesTable.setColumnCount(1)
        __qtablewidgetitem = QTableWidgetItem()
        self.PropertiesTable.setHorizontalHeaderItem(0, __qtablewidgetitem)
        if (self.PropertiesTable.rowCount() < 1):
            self.PropertiesTable.setRowCount(1)
        __qtablewidgetitem1 = QTableWidgetItem()
        self.PropertiesTable.setVerticalHeaderItem(0, __qtablewidgetitem1)
        self.PropertiesTable.setObjectName(u"PropertiesTable")
        self.PropertiesTable.setFrameShape(QFrame.NoFrame)
        self.PropertiesTable.setFrameShadow(QFrame.Plain)
        self.PropertiesTable.setAlternatingRowColors(True)
        self.PropertiesTable.setTextElideMode(Qt.ElideRight)
        self.PropertiesTable.setGridStyle(Qt.NoPen)
        self.PropertiesTable.horizontalHeader().setVisible(False)
        self.PropertiesTable.horizontalHeader().setHighlightSections(False)
        self.PropertiesTable.horizontalHeader().setProperty("showSortIndicator", False)
        self.PropertiesTable.horizontalHeader().setStretchLastSection(True)
        self.PropertiesTable.verticalHeader().setVisible(False)
        self.PropertiesTable.verticalHeader().setCascadingSectionResizes(False)
        self.PropertiesTable.verticalHeader().setDefaultSectionSize(28)
        self.PropertiesTable.verticalHeader().setHighlightSections(True)
        self.PropertiesTable.verticalHeader().setProperty("showSortIndicator", False)
        self.PropertiesTable.verticalHeader().setStretchLastSection(False)

        self.verticalLayout_13.addWidget(self.PropertiesTable)


        self.verticalLayout_14.addWidget(self.mainScriptPropertiesGroup)

        self.groupBox = QGroupBox(self.properties_tab_1)
        self.groupBox.setObjectName(u"groupBox")
        self.groupBox.setMinimumSize(QSize(0, 180))
        self.groupBox.setAlignment(Qt.AlignCenter)
        self.verticalLayout_5 = QVBoxLayout(self.groupBox)
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")
        self.object_search_bar = QLineEdit(self.groupBox)
        self.object_search_bar.setObjectName(u"object_search_bar")

        self.verticalLayout_5.addWidget(self.object_search_bar)

        self.objectTreeWidget = QTreeWidget(self.groupBox)
        self.objectTreeWidget.setObjectName(u"objectTreeWidget")
        self.objectTreeWidget.setUniformRowHeights(False)
        self.objectTreeWidget.setAllColumnsShowFocus(False)
        self.objectTreeWidget.setHeaderHidden(False)

        self.verticalLayout_5.addWidget(self.objectTreeWidget)


        self.verticalLayout_14.addWidget(self.groupBox)

        icon61 = QIcon()
        icon61.addFile(u"../redengine/assets/icons/magnifier.png", QSize(), QIcon.Normal, QIcon.Off)
        self.properties_tabs.addTab(self.properties_tab_1, icon61, "")
        self.properties_tab_2 = QWidget()
        self.properties_tab_2.setObjectName(u"properties_tab_2")
        self.verticalLayout_15 = QVBoxLayout(self.properties_tab_2)
        self.verticalLayout_15.setObjectName(u"verticalLayout_15")
        self.properties_options_1 = QCheckBox(self.properties_tab_2)
        self.properties_options_1.setObjectName(u"properties_options_1")

        self.verticalLayout_15.addWidget(self.properties_options_1)

        self.verticalSpacer = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_15.addItem(self.verticalSpacer)

        self.properties_tabs.addTab(self.properties_tab_2, icon60, "")

        self.verticalLayout_12.addWidget(self.properties_tabs)

        self.Properties_dock.setWidget(self.dockWidgetContents_3)
        main_window.addDockWidget(Qt.LeftDockWidgetArea, self.Properties_dock)
        self.pygame_menu_dock = QDockWidget(main_window)
        self.pygame_menu_dock.setObjectName(u"pygame_menu_dock")
        self.dockWidgetContents_2 = QWidget()
        self.dockWidgetContents_2.setObjectName(u"dockWidgetContents_2")
        self.verticalLayout_17 = QVBoxLayout(self.dockWidgetContents_2)
        self.verticalLayout_17.setObjectName(u"verticalLayout_17")
        self.groupBox_4 = QGroupBox(self.dockWidgetContents_2)
        self.groupBox_4.setObjectName(u"groupBox_4")
        self.groupBox_4.setAlignment(Qt.AlignCenter)
        self.groupBox_4.setFlat(False)
        self.verticalLayout_18 = QVBoxLayout(self.groupBox_4)
        self.verticalLayout_18.setObjectName(u"verticalLayout_18")
        self.pygame_surface_view = SurfaceViewer(self.groupBox_4)
        self.pygame_surface_view.setObjectName(u"pygame_surface_view")

        self.verticalLayout_18.addWidget(self.pygame_surface_view)


        self.verticalLayout_17.addWidget(self.groupBox_4)

        self.scrollArea = QScrollArea(self.dockWidgetContents_2)
        self.scrollArea.setObjectName(u"scrollArea")
        sizePolicy.setHeightForWidth(self.scrollArea.sizePolicy().hasHeightForWidth())
        self.scrollArea.setSizePolicy(sizePolicy)
        self.scrollArea.setMinimumSize(QSize(0, 100))
        self.scrollArea.setWidgetResizable(True)
        self.scrollAreaWidgetContents = QWidget()
        self.scrollAreaWidgetContents.setObjectName(u"scrollAreaWidgetContents")
        self.scrollAreaWidgetContents.setGeometry(QRect(0, 0, 363, 155))
        self.verticalLayout_19 = QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_19.setObjectName(u"verticalLayout_19")
        self.horizontalLayout_8 = QHBoxLayout()
        self.horizontalLayout_8.setObjectName(u"horizontalLayout_8")
        self.clear_event_stack_button = QPushButton(self.scrollAreaWidgetContents)
        self.clear_event_stack_button.setObjectName(u"clear_event_stack_button")
        icon62 = QIcon()
        icon62.addFile(u"../redengine/assets/icons/cross-button.png", QSize(), QIcon.Normal, QIcon.Off)
        self.clear_event_stack_button.setIcon(icon62)

        self.horizontalLayout_8.addWidget(self.clear_event_stack_button)

        self.dump_event_stack = QPushButton(self.scrollAreaWidgetContents)
        self.dump_event_stack.setObjectName(u"dump_event_stack")
        icon63 = QIcon()
        icon63.addFile(u"../redengine/assets/icons/receipt-text.png", QSize(), QIcon.Normal, QIcon.Off)
        self.dump_event_stack.setIcon(icon63)

        self.horizontalLayout_8.addWidget(self.dump_event_stack)


        self.verticalLayout_19.addLayout(self.horizontalLayout_8)

        self.groupBox_5 = QGroupBox(self.scrollAreaWidgetContents)
        self.groupBox_5.setObjectName(u"groupBox_5")
        self.groupBox_5.setAlignment(Qt.AlignCenter)
        self.groupBox_5.setCheckable(True)
        self.verticalLayout_20 = QVBoxLayout(self.groupBox_5)
        self.verticalLayout_20.setObjectName(u"verticalLayout_20")
        self.event_stack_list = QListWidget(self.groupBox_5)
        self.event_stack_list.setObjectName(u"event_stack_list")
        self.event_stack_list.setFrameShape(QFrame.NoFrame)

        self.verticalLayout_20.addWidget(self.event_stack_list)


        self.verticalLayout_19.addWidget(self.groupBox_5)

        self.scrollArea.setWidget(self.scrollAreaWidgetContents)

        self.verticalLayout_17.addWidget(self.scrollArea)

        self.pygame_menu_dock.setWidget(self.dockWidgetContents_2)
        main_window.addDockWidget(Qt.RightDockWidgetArea, self.pygame_menu_dock)

        self.menu_bar.addAction(self.project_button.menuAction())
        self.menu_bar.addAction(self.menuEdit.menuAction())
        self.menu_bar.addAction(self.menuBuild.menuAction())
        self.menu_bar.addAction(self.windows_button.menuAction())
        self.menu_bar.addAction(self.help_button.menuAction())
        self.project_button.addAction(self.actionNew_Project)
        self.project_button.addAction(self.actionOpen_Project)
        self.project_button.addAction(self.menuRecent_Projects.menuAction())
        self.project_button.addSeparator()
        self.project_button.addAction(self.actionSave)
        self.project_button.addAction(self.actionSave_as)
        self.project_button.addSeparator()
        self.project_button.addAction(self.menuPreferences.menuAction())
        self.project_button.addSeparator()
        self.project_button.addAction(self.actionReturnLauncher)
        self.menuPreferences.addAction(self.actionSave_Layout)
        self.menuPreferences.addAction(self.actionLoad_Layout)
        self.menuPreferences.addAction(self.actionRevert_Layout)
        self.menuPreferences.addSeparator()
        self.menuPreferences.addAction(self.menuThemes.menuAction())
        self.menuPreferences.addSeparator()
        self.menuPreferences.addAction(self.actionUser_Settings)
        self.menuPreferences.addAction(self.menuProject_Settings.menuAction())
        self.menuPreferences.addSeparator()
        self.menuPreferences.addAction(self.actionClear_All_Recent_Projects)
        self.menuThemes.addAction(self.menuLoad_Themes.menuAction())
        self.menuThemes.addAction(self.actionRevert_Themes)
        self.menuProject_Settings.addAction(self.actionRename_Project)
        self.menuProject_Settings.addAction(self.actionChange_Project_Version)
        self.menuProject_Settings.addAction(self.actionChange_Project_Author)
        self.windows_button.addAction(self.actionResources)
        self.windows_button.addAction(self.actionConsole)
        self.windows_button.addAction(self.actionPropertiesWindow)
        self.windows_button.addAction(self.actionAssets_Library)
        self.windows_button.addAction(self.actionPygame_Information)
        self.help_button.addAction(self.actionVisit_Source)
        self.help_button.addAction(self.actionDocumentation)
        self.help_button.addSeparator()
        self.help_button.addAction(self.actionCredits)
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionCopt)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addSeparator()
        self.menuBuild.addAction(self.actionRun_Project)
        self.menuBuild.addAction(self.actionRun_In_Fullscreen)
        self.menuBuild.addAction(self.actionPopout_Viewport)
        self.menuBuild.addSeparator()
        self.menuBuild.addAction(self.actionCompile_Project)
        self.menuBuild.addSeparator()
        self.menuBuild.addAction(self.actionOpen_in_File_Explorer)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionOpen_Project)
        self.toolBar.addAction(self.actionSave)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionCopt)
        self.toolBar.addAction(self.actionPaste)
        self.toolBar.addAction(self.actionRun_In_Fullscreen)
        self.toolBar.addAction(self.actionPopout_Viewport)
        self.toolBar.addAction(self.actionCompile_Project)
        self.toolBar.addAction(self.actionAssets_Library)
        self.toolBar.addAction(self.actionOpen_in_File_Explorer)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionResources)
        self.toolBar.addAction(self.actionConsole)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionDocumentation)

        self.retranslateUi(main_window)

        self.central_tab.setCurrentIndex(0)
        self.pause_button.setDefault(False)
        self.clear_log_button.setDefault(False)
        self.properties_tabs.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(main_window)
    # setupUi

    def retranslateUi(self, main_window):
        main_window.setWindowTitle(QCoreApplication.translate("main_window", u"Red Engine - Empty Project", None))
        self.actionSave.setText(QCoreApplication.translate("main_window", u"Save ", None))
#if QT_CONFIG(shortcut)
        self.actionSave.setShortcut(QCoreApplication.translate("main_window", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave_as.setText(QCoreApplication.translate("main_window", u"Save as", None))
#if QT_CONFIG(shortcut)
        self.actionSave_as.setShortcut(QCoreApplication.translate("main_window", u"Ctrl+Shift+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionNew_Project.setText(QCoreApplication.translate("main_window", u"New Project", None))
        self.actionOpen_Project.setText(QCoreApplication.translate("main_window", u"Open Project", None))
        self.actionRun_Project.setText(QCoreApplication.translate("main_window", u"Run Project", None))
        self.actionResources.setText(QCoreApplication.translate("main_window", u"Resources...", None))
        self.actionAssets_Library.setText(QCoreApplication.translate("main_window", u"Debug Menu ", None))
        self.actionProperties.setText(QCoreApplication.translate("main_window", u"Properties", None))
        self.actionUndo.setText(QCoreApplication.translate("main_window", u"Undo", None))
        self.actionRedo.setText(QCoreApplication.translate("main_window", u"Redo", None))
        self.actionVisit_Source.setText(QCoreApplication.translate("main_window", u"Visit Source", None))
        self.actionNew_File.setText(QCoreApplication.translate("main_window", u"New File", None))
        self.actionNew_Folder.setText(QCoreApplication.translate("main_window", u"New Folder", None))
        self.actionDelete_Resource.setText(QCoreApplication.translate("main_window", u"Delete Resource", None))
        self.actionConsole.setText(QCoreApplication.translate("main_window", u"Console...", None))
        self.actionCredits.setText(QCoreApplication.translate("main_window", u"Credits", None))
        self.actionDocumentation.setText(QCoreApplication.translate("main_window", u"Documentation", None))
        self.actionSave_Layout.setText(QCoreApplication.translate("main_window", u"Save Layout", None))
        self.actionLoad_Layout.setText(QCoreApplication.translate("main_window", u"Load Layout", None))
        self.actionRevert_Layout.setText(QCoreApplication.translate("main_window", u"Revert Layout", None))
        self.actionUser_Settings.setText(QCoreApplication.translate("main_window", u"User Settings", None))
        self.actionCut.setText(QCoreApplication.translate("main_window", u"Cut", None))
        self.actionCopt.setText(QCoreApplication.translate("main_window", u"Copy", None))
        self.actionPaste.setText(QCoreApplication.translate("main_window", u"Paste", None))
        self.actionFind.setText(QCoreApplication.translate("main_window", u"Find", None))
        self.actionReplace.setText(QCoreApplication.translate("main_window", u"Replace", None))
        self.actionGenerate_Main_py.setText(QCoreApplication.translate("main_window", u"Generate Main.py", None))
        self.actionGenerate_Script.setText(QCoreApplication.translate("main_window", u"Generate Script", None))
        self.actionRename.setText(QCoreApplication.translate("main_window", u"Rename", None))
        self.actionSet_as_Main_py.setText(QCoreApplication.translate("main_window", u"Set as Main.py", None))
        self.actionOpen_in_File_Explorer.setText(QCoreApplication.translate("main_window", u"Open in File Explorer", None))
        self.actionGenerate_Files.setText(QCoreApplication.translate("main_window", u"File", None))
        self.actionCreate_Context.setText(QCoreApplication.translate("main_window", u"Create", None))
        self.actionCopy_Path.setText(QCoreApplication.translate("main_window", u"Copy Path", None))
        self.actionExample_Script.setText(QCoreApplication.translate("main_window", u"Example Script", None))
        self.actionExample_Main.setText(QCoreApplication.translate("main_window", u"Example Main", None))
        self.actionEmpty_Script.setText(QCoreApplication.translate("main_window", u"Empty Script", None))
        self.actionEmpty_Main.setText(QCoreApplication.translate("main_window", u"Empty Main", None))
        self.actionReload.setText(QCoreApplication.translate("main_window", u"Reload", None))
        self.actionClear_All_Recent_Projects.setText(QCoreApplication.translate("main_window", u"Clear All Recent Projects", None))
        self.actionCompile_Project.setText(QCoreApplication.translate("main_window", u"Build Project (.exe)", None))
        self.actionPause_Project.setText(QCoreApplication.translate("main_window", u"Pause Project", None))
        self.actionRun_In_Fullscreen.setText(QCoreApplication.translate("main_window", u"Run In Fullscreen", None))
        self.actionPropertiesWindow.setText(QCoreApplication.translate("main_window", u"Properties...", None))
        self.actionPopout_Viewport.setText(QCoreApplication.translate("main_window", u"Popout Viewport", None))
        self.actionReturnLauncher.setText(QCoreApplication.translate("main_window", u"Return To Launcher ", None))
        self.actionRevert_Themes.setText(QCoreApplication.translate("main_window", u"Revert To Default", None))
        self.actionRename_Project.setText(QCoreApplication.translate("main_window", u"Rename Project ", None))
        self.actionChange_Project_Version.setText(QCoreApplication.translate("main_window", u"Change Project Version", None))
        self.actionChange_Project_Author.setText(QCoreApplication.translate("main_window", u"Change Project Author", None))
        self.actionMark_As_Library.setText(QCoreApplication.translate("main_window", u"Mark As Library", None))
        self.actionUnmark_As_Library.setText(QCoreApplication.translate("main_window", u"Unmark As Library", None))
        self.actionPygame_Information.setText(QCoreApplication.translate("main_window", u"Pygame Information", None))
        self.start_button.setText("")
        self.pause_button.setText("")
        self.stop_button.setText("")
        self.reload_button.setText("")
        self.central_tab.setTabText(self.central_tab.indexOf(self.preview_window), QCoreApplication.translate("main_window", u"Viewport", None))
        self.central_tab.setTabText(self.central_tab.indexOf(self.scripting_window), QCoreApplication.translate("main_window", u"Scripting", None))
        self.resources_dock.setWindowTitle(QCoreApplication.translate("main_window", u"Resources", None))
        self.resource_search_bar.setPlaceholderText(QCoreApplication.translate("main_window", u"Search...", None))
        ___qtreewidgetitem = self.resources_tree.headerItem()
        ___qtreewidgetitem.setText(2, QCoreApplication.translate("main_window", u"Size", None));
        ___qtreewidgetitem.setText(1, QCoreApplication.translate("main_window", u"Type", None));
        ___qtreewidgetitem.setText(0, QCoreApplication.translate("main_window", u"Name", None));
        self.console_dock.setWindowTitle(QCoreApplication.translate("main_window", u"Console", None))
        self.clear_log_button.setText(QCoreApplication.translate("main_window", u"Clear Log Button", None))
        self.label_5.setText("")
        self.log_count_label.setText(QCoreApplication.translate("main_window", u"1", None))
        self.label_3.setText("")
        self.warning_count_label.setText(QCoreApplication.translate("main_window", u"1", None))
        self.label_2.setText("")
        self.error_count_label.setText(QCoreApplication.translate("main_window", u"1", None))
        self.console_command_line.setPlaceholderText(QCoreApplication.translate("main_window", u">> Python Commands", None))
        self.debug_menu_dock.setWindowTitle(QCoreApplication.translate("main_window", u"Debug Menu", None))
        self.resource_monitor_group.setTitle(QCoreApplication.translate("main_window", u"Resource Monitor", None))
        self.cpu_usage_label.setText(QCoreApplication.translate("main_window", u"CPU Usage: 0%", None))
        self.cpu_usage_label_2.setText(QCoreApplication.translate("main_window", u"CPU Usage (Process): 0%", None))
        self.ram_usage_label.setText(QCoreApplication.translate("main_window", u"RAM Usage: 0%", None))
        self.memory_usage_label.setText(QCoreApplication.translate("main_window", u"Memory Usage: 0000 MB / 0000 MB", None))
        self.memory_pusage_label.setText(QCoreApplication.translate("main_window", u"Memory Usage (Process): 0000 MB", None))
        self.gpu_usage_label.setText(QCoreApplication.translate("main_window", u"GPU Usage: 0%", None))
        self.groupBox_3.setTitle(QCoreApplication.translate("main_window", u"Plaform Information", None))
        self.pushButton.setText(QCoreApplication.translate("main_window", u"Export Platform Snapshot (.json)", None))
        self.debug_menu_toolbox.setItemText(self.debug_menu_toolbox.indexOf(self.toolBoxPage1), QCoreApplication.translate("main_window", u"Machine Information", None))
        self.delta_time_label.setText(QCoreApplication.translate("main_window", u"Delta Time: 0ms", None))
        self.fps_group_box.setTitle(QCoreApplication.translate("main_window", u"FPS", None))
        self.fps_low_label.setText(QCoreApplication.translate("main_window", u"Low: 0", None))
        self.fps_average_label.setText(QCoreApplication.translate("main_window", u"Avg: 0", None))
        self.fps_high_label.setText(QCoreApplication.translate("main_window", u"High: 0", None))
        self.blit_calls_label.setText(QCoreApplication.translate("main_window", u"Blit Calls (Per Tick): 0", None))
        self.draw_calls_label.setText(QCoreApplication.translate("main_window", u"All Draw Calls (Per Tick): 0", None))
        self.active_surfaces_label.setText(QCoreApplication.translate("main_window", u"Active Surfaces : 0 / 0", None))
        self.groupBox_2.setTitle(QCoreApplication.translate("main_window", u"Pygame Information", None))
        self.debug_menu_toolbox.setItemText(self.debug_menu_toolbox.indexOf(self.toolBoxPage2), QCoreApplication.translate("main_window", u"Pygame Debug Information", None))
        self.project_button.setTitle(QCoreApplication.translate("main_window", u"Project", None))
        self.menuRecent_Projects.setTitle(QCoreApplication.translate("main_window", u"Recent Projects", None))
        self.menuPreferences.setTitle(QCoreApplication.translate("main_window", u"Preferences", None))
        self.menuThemes.setTitle(QCoreApplication.translate("main_window", u"Themes", None))
        self.menuLoad_Themes.setTitle(QCoreApplication.translate("main_window", u"Load Themes", None))
        self.menuProject_Settings.setTitle(QCoreApplication.translate("main_window", u"Project Settings", None))
        self.windows_button.setTitle(QCoreApplication.translate("main_window", u"Tools", None))
        self.help_button.setTitle(QCoreApplication.translate("main_window", u"Help", None))
        self.menuEdit.setTitle(QCoreApplication.translate("main_window", u"Edit", None))
        self.menuBuild.setTitle(QCoreApplication.translate("main_window", u"Game", None))
        self.toolBar.setWindowTitle(QCoreApplication.translate("main_window", u"toolBar", None))
        self.Properties_dock.setWindowTitle(QCoreApplication.translate("main_window", u"Properties", None))
        self.mainScriptPropertiesGroup.setTitle(QCoreApplication.translate("main_window", u"Main Script ", None))
        self.properties_search_bar.setText("")
        self.properties_search_bar.setPlaceholderText(QCoreApplication.translate("main_window", u"Search Properties...", None))
        ___qtablewidgetitem = self.PropertiesTable.horizontalHeaderItem(0)
        ___qtablewidgetitem.setText(QCoreApplication.translate("main_window", u"New Column", None));
        ___qtablewidgetitem1 = self.PropertiesTable.verticalHeaderItem(0)
        ___qtablewidgetitem1.setText(QCoreApplication.translate("main_window", u"New Row", None));
        self.groupBox.setTitle(QCoreApplication.translate("main_window", u"Object Name", None))
        self.object_search_bar.setPlaceholderText(QCoreApplication.translate("main_window", u"Search Objects...", None))
        ___qtreewidgetitem1 = self.objectTreeWidget.headerItem()
        ___qtreewidgetitem1.setText(1, QCoreApplication.translate("main_window", u"Value", None));
        ___qtreewidgetitem1.setText(0, QCoreApplication.translate("main_window", u"Object", None));
        self.properties_tabs.setTabText(self.properties_tabs.indexOf(self.properties_tab_1), QCoreApplication.translate("main_window", u"Inspector", None))
        self.properties_options_1.setText(QCoreApplication.translate("main_window", u"Display all attributes", None))
        self.properties_tabs.setTabText(self.properties_tabs.indexOf(self.properties_tab_2), QCoreApplication.translate("main_window", u"Inspector Settings", None))
        self.pygame_menu_dock.setWindowTitle(QCoreApplication.translate("main_window", u"Pygame Information", None))
        self.groupBox_4.setTitle(QCoreApplication.translate("main_window", u"Surface View", None))
        self.clear_event_stack_button.setText(QCoreApplication.translate("main_window", u"Clear Event Stack", None))
        self.dump_event_stack.setText(QCoreApplication.translate("main_window", u"Dump To File", None))
        self.groupBox_5.setTitle(QCoreApplication.translate("main_window", u"Pygame Event Stack", None))
    # retranslateUi

